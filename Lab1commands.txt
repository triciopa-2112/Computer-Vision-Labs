
pwd

%---- 2.1 Contrast Stretching------
Pc = imread('mrt-train.jpg');
whos Pc
P = rgb2gray(Pc);
imshow P
imshow(P);
min(P(:))
max(P(:))
P2 = imadjust(P);
imshow(P2);
imshow(P2,[]);
imshow(P2);
imshow(P);

%---- 2.2 Histogram Eq
imhist(P,10);
imhist(P,256);
P3 = histew(P,255);
P3 = histeq(P,255);
imshow(P3)
imhist(P3,256);
P3 = histeq(P,255);
imhist(P3,256);
imhist(P3,10)
imhist(P3,256)
imhist(P3,10)

%------ 2.3 Linear Filtering
h = fspecial('gaussian',[5 5],1)
sum(h(:))
mesh(h)
h2 = fspecial('gaussian', [5 5], 2)
mesh(h2)
P4 = imread('ntu-gn.jpg');
P4h = conv2(P4,h)
commandhistory
imshow(P4h)
imshow(p4)
imshow(P4)
P4h = imfilter(P4,h,'same')
imshow(P4h)
P4h2 = imfilter(P4,h2,'same')
imshow(P4h2)
sp = imread('ntu-sp.jpg')
imshow(sp)
sp1=imfilter(sp,h)
imshow(sp1)
sp2=imfilter(sp,h2)
imshow(sp2)
imshow(sp1)
%------- 2.4 Median Filter ---------
gaumedf55 = medfilt2(P4, [5 5]); % with 5X5 neighborhood
imshow(gaumedf55)
gaumedf33 = medfilt2(P4, [3 3]);% with 3x3 neighborhood
imshow(gaumedf33)
speckmed33=medfilt2(sp,[3 3])
imshow(speckmed33)
speckmed55=medfilt2(sp,[5 5]);
imshow(speckmed55)


% -------- 2.5 Suppressing Noise Interference Patterns ---
i = imread('pck-int.jpg');
imshow(i);
F = fft2(i);
S = abs(F).^2;
imagesc(fftshift(S.^0.1));
colormap('default');
imagesc(S.^0.1);
[x,y] = ginput;
for n = 1:2
F(y(n)-2:y(n)+2, x(n)-2:x(n)+2)=0;
end
S2= abs(F).^2;
imagesc(fftshift(S2.^0.1));
final2= uint8((real(ifft2(F)));
final2= uint8(real(ifft2(F)));
imshow(final2);


%-- 2.6 Undoing Perspective Distortion --%
P=imread('book.jpg')
imshow(P);
[X Y] = ginput(4)
x = [0, 210, 210, 0];
y = [0, 0, 297, 297];
A = [X(1) Y(1) 1 0 0 0 -X(1)*x(1) -Y(1)*x(1);
0 0 0 X(1) Y(1) 1 -X(1)*y(1) -Y(1)*y(1);
X(2) Y(2) 1 0 0 0 -X(2)*x(2) -Y(2)*x(2);
0 0 0 X(2) Y(2) 1 -X(2)*y(2) -Y(2)*y(2);
X(3) Y(3) 1 0 0 0 -X(3)*x(3) -Y(3)*x(3);
0 0 0 X(3) Y(3) 1 -X(3)*y(3) -Y(3)*y(3);
X(4) Y(4) 1 0 0 0 -X(4)*x(4) -Y(4)*x(4);
0 0 0 X(4) Y(4) 1 -X(4)*y(4) -Y(4)*y(4);];
v = [x(1);y(1);
x(2);y(2);
x(3);y(3);
x(4);y(4);];
u = A\v;
U=reshape([u;1],3,3)';
w = U*[X';Y'; ones(1,4)];
w = w ./ (ones(3,1)*w(3,:));
w
T = maketform(‘projective’, U’);
T = maketform('projective', U');
P2 = imtransform(P, T, 'XData', [0 210], 'YData', [0 297]);
imshow(P2);
